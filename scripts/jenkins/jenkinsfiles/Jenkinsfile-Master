@Library('test-shared-library') _

import ai.h2o.ci.Utils
import ai.h2o.ci.BuildInfo
import static ai.h2o.ci.Utils.banner

// Global library
def utilsLib = new Utils()

def DEFAULT_NODE_LABEL = 'docker && !mr-0xc8'

def executeTestStages = null
def buildConfig = null

ansiColor('xterm') {
  timestamps {

    node(DEFAULT_NODE_LABEL) {
      stage('Prepare and Build') {
        dir('h2o-3') {
          // clear the folder
          deleteDir()
          // checkout H2O-3
          retry(3) {
            timeout(time: 1, unit: 'MINUTES') {
              echo "###### Checkout H2O-3 ######"
              checkout scm
            }
          }
        }

        def setBuildDesc = load('h2o-3/scripts/jenkins/groovy/setBuildDescription.groovy')
        setBuildDesc()

        def prepareH2O3 = load('h2o-3/scripts/jenkins/groovy/prepareH2O3.groovy')
        buildConfig = prepareH2O3('MODE_MASTER', true)
        buildConfig.setDefaultOverrideRerun(true)

        def setJobProperties = load('h2o-3/scripts/jenkins/groovy/setJobProperties.groovy')
        setJobProperties(buildConfig)

        // Load the executeTestStages script
        executeTestStages = load('h2o-3/scripts/jenkins/groovy/executeTestStages.groovy')
      }
    }
    executeTestStages(buildConfig)
  }
}
